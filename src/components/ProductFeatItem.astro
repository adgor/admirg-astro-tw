---
import { Image } from "@astrojs/image/components";

import design from "~/assets/fh-feat.png";
import dev from "~/assets/fh-dev.png";
import speed from "~/assets/fh-speed.png";
// import final from "~/assets/blimmobilienag.png";

// console.log(design);

const projectDetails = [
  {
    title: "Design as a System",
    titleMobile: "Design",
    body: "Understand your business goals, target audience, and competition to create a strategy that meets your needs",
    id: "design",
    ariaSelected: "true",
    hidden: false,
    imgSrc: design,
  },
  {
    title: "Thoughtful Development",
    titleMobile: "Development",
    body: "Responsive",
    id: "dev",
    ariaSelected: "false",
    hidden: true,
    imgSrc: dev,
  },
  {
    title: "Performance is King",
    titleMobile: "Performance",
    body: "UX/UI Design",
    id: "speed",
    ariaSelected: "false",
    hidden: true,
    imgSrc: speed,
  },
  // {
  //   title: "Final Results",
  //   titleMobile: "Results",
  //   body: "Astro",
  //   id: "final",
  //   ariaSelected: "false",
  //   hidden: true,
  //   imgSrc: final,
  // },
];

export interface Props {
  secStyle?: string;
}

const { secStyle = "pt-20" } = Astro.props as Props;
---

<section
  class={` relative overflow-hidden  pb-28 sm:py-32 ${secStyle}`}
  id="features"
  aria-label="recent work"
>
  <!-- bg blured colorss
        /> -->
  <div id="tabs-id" class="relative mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
    <div class="max-w-2xl md:mx-auto md:text-center xl:max-w-none">
      <h2
        class="font-display text-3xl capitalize tracking-tight text-white sm:text-4xl md:text-5xl"
      >
        recent work
      </h2>
    </div>
    <div
      class="tabs mt-16 grid grid-cols-1 items-center gap-y-2 pt-10 sm:gap-y-6 md:mt-20 lg:grid-cols-12 lg:pt-0"
    >
      <div
        class="-mx-4 flex overflow-x-auto pb-4 sm:mx-0 sm:overflow-visible sm:pb-0 lg:col-span-5"
      >
        <ul
          class="relative z-10 flex gap-x-4 whitespace-nowrap px-4 sm:mx-auto sm:px-0 lg:mx-0 lg:block lg:gap-x-0 lg:gap-y-1 lg:whitespace-normal"
          role="tablist"
          aria-orientation="vertical"
        >
          {
            projectDetails.map(
              ({ title, titleMobile, body, id, ariaSelected }) => (
                <li
                  class="group relative rounded-full px-4 py-1 lg:rounded-l-xl lg:rounded-r-none lg:p-6"
                  aria-selected={ariaSelected}
                  role="tab"
                  id={id}
                >
                  <button
                    class="font-display text-left text-lg lg:text-white [&:not(:focus-visible)]:focus:outline-none"
                    type="button"
                  >
                    <span class="absolute inset-0 rounded-full lg:rounded-l-xl lg:rounded-r-none" />

                    <span class=" lg:hidden">{titleMobile}</span>
                    <span class="hidden lg:block">{title}</span>
                  </button>

                  <p class="mt-2 hidden text-sm lg:block">{body}</p>
                </li>
              )
            )
          }
        </ul>
      </div>
      <div class="lg:col-span-7">
        {
          projectDetails.map(({ hidden, imgSrc, body, id }) => (
            <div id={id} {hidden} role="tabpanel" aria-labelledby={id}>
              <div class="relative sm:px-6 lg:hidden">
                <div class="absolute  -inset-x-4 bottom-[-4.25rem] top-[-6.5rem] bg-brand/10 ring-1 ring-inset ring-brand/10 sm:inset-x-0 sm:rounded-t-xl" />
                <p class="relative mx-auto max-w-2xl text-base text-white sm:text-center">
                  {body}
                </p>
              </div>
              <div class="relative mt-10 w-[45rem] overflow-hidden rounded-xl  shadow-xl shadow-blue-900/20 sm:w-auto lg:mt-0 lg:w-[67.8125rem]">
                <Image alt="product image" src={imgSrc} class="top-0   " />
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  li[aria-selected="false"] {
    @apply hover:bg-brand/10 lg:hover:bg-brand/5;

    button {
      @apply text-blue-100 hover:text-white;
    }

    p {
      @apply text-blue-100 group-hover:text-white;
    }
  }
  li[aria-selected="true"] {
    @apply bg-brand lg:bg-brand/10 lg:ring-1 lg:ring-inset lg:ring-brand/10;

    button {
      @apply text-white lg:text-brand;
    }

    p {
      @apply text-white;
    }
  }
</style>

<script define:vars={{}}>
  const tabs = document.querySelector(".tabs");
  const tabButtons = tabs.querySelectorAll('[role="tab"]');
  const tabPanels = Array.from(tabs.querySelectorAll('[role="tabpanel"]'));

  function handleTabClick(event) {
    // hide all tabpannels
    tabPanels.forEach((panel) => {
      panel.hidden = true;
    });

    // mark all tabs as unselected
    tabButtons.forEach((tab) => {
      //   tab.ariaSelectd = false;
      tab.setAttribute("aria-selected", false);
    });

    // mark clicked tab as selected
    event.currentTarget.setAttribute("aria-selected", true);

    // find the associated tabPanel and show it!
    const { id } = event.currentTarget;

    // console.log(tabPanels);
    const tabPanel = tabPanels.find(
      (panel) => panel.getAttribute("aria-labelledby") === id
    );
    tabPanel.hidden = false;
  }

  tabButtons.forEach((button) =>
    button.addEventListener("click", handleTabClick)
  );
</script>
